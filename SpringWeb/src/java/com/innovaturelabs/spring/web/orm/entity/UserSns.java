package java.com.innovaturelabs.spring.web.orm.entity;
// Generated Aug 6, 2013 11:57:10 AM by Hibernate Tools 3.2.1.GA

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserSns generated by hbm2java
 */
@Entity
@Table(name = "user_sns")
public class UserSns implements java.io.Serializable {

    private UserSnsId id;
    private User user;
    private String userName;
    private String snsToken;
    private String snsSecret;
    private String imageUrl;
    private Date createDate;
    private Date updateDate;
    private byte status;

    public UserSns() {
    }

    public UserSns(UserSnsId id, User user, Date createDate, Date updateDate, byte status) {
        this.id = id;
        this.user = user;
        this.createDate = createDate;
        this.updateDate = updateDate;
        this.status = status;
    }

    public UserSns(UserSnsId id, User user, String userName, String snsToken, String snsSecret, String imageUrl, Date createDate, Date updateDate, byte status) {
        this.id = id;
        this.user = user;
        this.userName = userName;
        this.snsToken = snsToken;
        this.snsSecret = snsSecret;
        this.imageUrl = imageUrl;
        this.createDate = createDate;
        this.updateDate = updateDate;
        this.status = status;
    }

    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "snsId", column =
                @Column(name = "sns_id", nullable = false)),
        @AttributeOverride(name = "snsType", column =
                @Column(name = "sns_type", nullable = false))})
    public UserSnsId getId() {
        return this.id;
    }

    public void setId(UserSnsId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", nullable = false)
    public User getUser() {
        return this.user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    @Column(name = "user_name", length = 100)
    public String getUserName() {
        return this.userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    @Column(name = "sns_token")
    public String getSnsToken() {
        return this.snsToken;
    }

    public void setSnsToken(String snsToken) {
        this.snsToken = snsToken;
    }

    @Column(name = "sns_secret")
    public String getSnsSecret() {
        return this.snsSecret;
    }

    public void setSnsSecret(String snsSecret) {
        this.snsSecret = snsSecret;
    }

    @Column(name = "image_url")
    public String getImageUrl() {
        return this.imageUrl;
    }

    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "create_date", nullable = false, length = 19)
    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "update_date", nullable = false, length = 19)
    public Date getUpdateDate() {
        return this.updateDate;
    }

    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

    @Column(name = "status", nullable = false)
    public byte getStatus() {
        return this.status;
    }

    public void setStatus(byte status) {
        this.status = status;
    }
}
